// ===========================================================================
//
// Styles for combat in svg
//
// ===========================================================================
// --------------------------------------
// keyframes
// --------------------------------------
@include keyframes(targetHover) {
    0% {
        opacity: 0.5;
        fill-opacity: 0.2;
    }
    100% {
        opacity: 1;
        fill-opacity: 1;
    }
}

@include keyframes(targetHoverInactive) {
    0% {
        opacity: 0.6;
    }
    100% {
        opacity: 0.8;
    }
}

// --------------------------------------
// styles
// --------------------------------------
#battle {
    .entity-group-wrapper {
        cursor: pointer
    }

    // ----------------------------------
    // indicator
    // ----------------------------------
    .target-indicator {
        opacity: 0;
        fill: #343434;
        fill-opacity: 0.5;
        stroke: #ffffff;
        stroke-opacity: 0.5;
        stroke-width: 2px;
    }

    // Only highlight valid targets
    .state-ability.selected-ability-damage.selected-ability-enemy .enemy .target-indicator, 
    .state-ability.selected-ability-damage.selected-ability-player .player .target-indicator {
        fill: #dd2222;
    }
    .state-ability.selected-ability-heal.selected-ability-player .player .target-indicator,
    .state-ability.selected-ability-heal.selected-ability-enemy .enemy .target-indicator {
        fill: #22dd22;
    }

    .entity-hover .target-indicator {
        @include animation(targetHoverInactive 0.2s infinite alternate);
    }
    .state-ability .entity-hover .target-indicator {
        @include animation(targetHover 0.2s infinite alternate);
    }
    // TODO: invalid target effect

    // ----------------------------------
    // key
    // ----------------------------------
    .key-indicator,  
    .alternative-key-indicator {
        font-size: 2em;
        fill: #ffffff;
        text-shadow: 0 1px 0 #000000;
        @include animation(targetHoverInactive 0.4s infinite alternate);

        circle {
            fill: #a0a0a0;
            fill-opacity: 1;
        }
    }

    .key-indicator.hidden, 
    .alternative-key-indicator.hidden {
        display: block;
        opacity: 0;
    }


    // --------------------------------------
    //
    // health bar
    //
    // --------------------------------------
    .battle-entity-health .health-bar {
        fill: #dd2222;
    }

    .battle-entity-health .health-bar-border {
        fill: none;
        stroke: #ffffff;
    }

    // Damage text
    .entity-group-text {
        font-size: 1.5em;
        font-weight: bold;
    }

    .entity-group-text.damage.negative {
        fill: #dd3333;
        stroke: #990000;
    }
    .entity-group-text.damage.positive {
        fill: #33dd33;
        stroke: #009900;
    }

    .entity-group-text.damage.neutral {
        fill: #999999;
        stroke: #ffffff;
    }

    // --------------------------------------
    //
    // Timer
    //
    // --------------------------------------
    .timer-bar-border {
        fill: none;
        stroke: #343434;
    }
    .timer-bar {
        fill: #ffffff;
        stroke: none;
    }
}
